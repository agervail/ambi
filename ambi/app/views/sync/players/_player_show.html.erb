<div>
  <% if player.song_id %>
    <div id="player"></div>
      <script>
        // 2. This code loads the IFrame Player API code asynchronously.
        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
          <% if player.song_id %>
          player = new YT.Player('player', {
            height: '390',
            width: '640',
            videoId: '<%= Song.find(player.song_id).link %>',
            events: {
              'onReady': onPlayerReady,
              'onStateChange': onPlayerStateChange
            }
          });
          <% end %>
        }


      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
        window.ytPlayerLoaded = true
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.ENDED) {
          $.ajax({
            url: "<%= "/rooms/next/" + player.room_id.to_s + "?current_song_id=" + player.song_id.to_s + "&current_song_link=" %>" + player.getVideoData()['video_id'],
            type: "GET",
            success: function(json) {
              if(json.length != 0) {
                <% player.reload %>
                player.loadVideoById(json.link, 5, "large")
                player.playVideo()
              } else {
                location.reload()
              }
            }
          })
        }
      }
      </script>
      <% end %>
</div>
