<div>
  <div id="current_song">
  <% if !player.song_id %>
    <p>Pas de video en cours de lecture</p>
  </div>
  <% else %>
    <% current_song = Song.find(player.song_id) %>
    <p><%= "Lecture en cours : " + current_song.name %></p>
  </div>
  <script>


    var player;
    loadPlayer();

  function loadPlayer() {
    if (typeof(YT) == 'undefined' || typeof(YT.Player) == 'undefined') {

      var tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      window.onYouTubePlayerAPIReady = function() {
        onYouTubePlayer();
      };

    } else {

      onYouTubePlayer();

    }
  }


  function onYouTubePlayer() {
    player = new YT.Player('player', {
      height: '490',
      width: '880',
      videoId: "<%= Song.find(player.song_id).link %>",
      playerVars: { controls:1, showinfo: 0, rel: 0, showsearch: 0, iv_load_policy: 3 },
      events: {
        'onStateChange': onPlayerStateChange,
        'onReady': onPlayerReady,
      }
    });

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
      event.target.playVideo();
    }
  }


    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    function onPlayerStateChange(event) {
      if (event.data == YT.PlayerState.ENDED) {
        $.ajax({
          url: "<%= "/rooms/next/" + player.room_id.to_s + "?current_song_id=" + player.song_id.to_s %>",
          type: "GET",
          success: function(json) {
            if(json.length != 0) {
              player.loadVideoById(json.link, 5, "large")
              player.playVideo()
            } else {
              location.reload()
            }
          }
        })
      }
    }
  </script>
  <% end %>
</div>
